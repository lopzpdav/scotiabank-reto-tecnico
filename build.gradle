plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'application'
}

group = 'com.springboot'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//Dependencias base
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-starter-aop'

	//Dependencias para JPA y R2DBC
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'

	//Dependencias para trabajar con H2
	implementation 'io.r2dbc:r2dbc-h2'
	runtimeOnly 'com.h2database:h2'

	//Dependencias para utilizar mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	//Dependencias para lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0' //Necesaria para utilizar mapstruct + lombok

	//Dependencias para test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// SpringDoc
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.14'
}

application {
	mainClass = 'com.springboot.retotecnico.RetoTecnicoApplication'
}

tasks.named('test') {
	useJUnitPlatform()
}
